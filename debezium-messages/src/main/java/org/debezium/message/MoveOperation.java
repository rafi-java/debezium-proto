/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.debezium.message;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MoveOperation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MoveOperation\",\"namespace\":\"org.debezium.message\",\"fields\":[{\"name\":\"fromPath\",\"type\":\"string\"},{\"name\":\"toPath\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence fromPath;
  @Deprecated public java.lang.CharSequence toPath;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MoveOperation() {}

  /**
   * All-args constructor.
   */
  public MoveOperation(java.lang.CharSequence fromPath, java.lang.CharSequence toPath) {
    this.fromPath = fromPath;
    this.toPath = toPath;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fromPath;
    case 1: return toPath;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fromPath = (java.lang.CharSequence)value$; break;
    case 1: toPath = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fromPath' field.
   */
  public java.lang.CharSequence getFromPath() {
    return fromPath;
  }

  /**
   * Sets the value of the 'fromPath' field.
   * @param value the value to set.
   */
  public void setFromPath(java.lang.CharSequence value) {
    this.fromPath = value;
  }

  /**
   * Gets the value of the 'toPath' field.
   */
  public java.lang.CharSequence getToPath() {
    return toPath;
  }

  /**
   * Sets the value of the 'toPath' field.
   * @param value the value to set.
   */
  public void setToPath(java.lang.CharSequence value) {
    this.toPath = value;
  }

  /** Creates a new MoveOperation RecordBuilder */
  public static org.debezium.message.MoveOperation.Builder newBuilder() {
    return new org.debezium.message.MoveOperation.Builder();
  }
  
  /** Creates a new MoveOperation RecordBuilder by copying an existing Builder */
  public static org.debezium.message.MoveOperation.Builder newBuilder(org.debezium.message.MoveOperation.Builder other) {
    return new org.debezium.message.MoveOperation.Builder(other);
  }
  
  /** Creates a new MoveOperation RecordBuilder by copying an existing MoveOperation instance */
  public static org.debezium.message.MoveOperation.Builder newBuilder(org.debezium.message.MoveOperation other) {
    return new org.debezium.message.MoveOperation.Builder(other);
  }
  
  /**
   * RecordBuilder for MoveOperation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MoveOperation>
    implements org.apache.avro.data.RecordBuilder<MoveOperation> {

    private java.lang.CharSequence fromPath;
    private java.lang.CharSequence toPath;

    /** Creates a new Builder */
    private Builder() {
      super(org.debezium.message.MoveOperation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.debezium.message.MoveOperation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fromPath)) {
        this.fromPath = data().deepCopy(fields()[0].schema(), other.fromPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.toPath)) {
        this.toPath = data().deepCopy(fields()[1].schema(), other.toPath);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MoveOperation instance */
    private Builder(org.debezium.message.MoveOperation other) {
            super(org.debezium.message.MoveOperation.SCHEMA$);
      if (isValidValue(fields()[0], other.fromPath)) {
        this.fromPath = data().deepCopy(fields()[0].schema(), other.fromPath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.toPath)) {
        this.toPath = data().deepCopy(fields()[1].schema(), other.toPath);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'fromPath' field */
    public java.lang.CharSequence getFromPath() {
      return fromPath;
    }
    
    /** Sets the value of the 'fromPath' field */
    public org.debezium.message.MoveOperation.Builder setFromPath(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.fromPath = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fromPath' field has been set */
    public boolean hasFromPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fromPath' field */
    public org.debezium.message.MoveOperation.Builder clearFromPath() {
      fromPath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'toPath' field */
    public java.lang.CharSequence getToPath() {
      return toPath;
    }
    
    /** Sets the value of the 'toPath' field */
    public org.debezium.message.MoveOperation.Builder setToPath(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.toPath = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'toPath' field has been set */
    public boolean hasToPath() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'toPath' field */
    public org.debezium.message.MoveOperation.Builder clearToPath() {
      toPath = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public MoveOperation build() {
      try {
        MoveOperation record = new MoveOperation();
        record.fromPath = fieldSetFlags()[0] ? this.fromPath : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.toPath = fieldSetFlags()[1] ? this.toPath : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
