/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.debezium.message;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Patch extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Patch\",\"namespace\":\"org.debezium.message\",\"fields\":[{\"name\":\"dbId\",\"type\":\"string\"},{\"name\":\"entityTypeName\",\"type\":[\"null\",\"string\"]},{\"name\":\"entityId\",\"type\":[\"null\",\"string\"]},{\"name\":\"userId\",\"type\":\"string\"},{\"name\":\"txnId\",\"type\":[\"null\",\"string\"]},{\"name\":\"operations\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"AddOperation\",\"fields\":[{\"name\":\"path\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"ReplaceOperation\",\"fields\":[{\"name\":\"path\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"RequireOperation\",\"fields\":[{\"name\":\"path\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"CopyOperation\",\"fields\":[{\"name\":\"fromPath\",\"type\":\"string\"},{\"name\":\"toPath\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"MoveOperation\",\"fields\":[{\"name\":\"fromPath\",\"type\":\"string\"},{\"name\":\"toPath\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"RemoveOperation\",\"fields\":[{\"name\":\"path\",\"type\":\"string\"}]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence dbId;
  @Deprecated public java.lang.CharSequence entityTypeName;
  @Deprecated public java.lang.CharSequence entityId;
  @Deprecated public java.lang.CharSequence userId;
  @Deprecated public java.lang.CharSequence txnId;
  @Deprecated public java.util.List<java.lang.Object> operations;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Patch() {}

  /**
   * All-args constructor.
   */
  public Patch(java.lang.CharSequence dbId, java.lang.CharSequence entityTypeName, java.lang.CharSequence entityId, java.lang.CharSequence userId, java.lang.CharSequence txnId, java.util.List<java.lang.Object> operations) {
    this.dbId = dbId;
    this.entityTypeName = entityTypeName;
    this.entityId = entityId;
    this.userId = userId;
    this.txnId = txnId;
    this.operations = operations;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dbId;
    case 1: return entityTypeName;
    case 2: return entityId;
    case 3: return userId;
    case 4: return txnId;
    case 5: return operations;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dbId = (java.lang.CharSequence)value$; break;
    case 1: entityTypeName = (java.lang.CharSequence)value$; break;
    case 2: entityId = (java.lang.CharSequence)value$; break;
    case 3: userId = (java.lang.CharSequence)value$; break;
    case 4: txnId = (java.lang.CharSequence)value$; break;
    case 5: operations = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dbId' field.
   */
  public java.lang.CharSequence getDbId() {
    return dbId;
  }

  /**
   * Sets the value of the 'dbId' field.
   * @param value the value to set.
   */
  public void setDbId(java.lang.CharSequence value) {
    this.dbId = value;
  }

  /**
   * Gets the value of the 'entityTypeName' field.
   */
  public java.lang.CharSequence getEntityTypeName() {
    return entityTypeName;
  }

  /**
   * Sets the value of the 'entityTypeName' field.
   * @param value the value to set.
   */
  public void setEntityTypeName(java.lang.CharSequence value) {
    this.entityTypeName = value;
  }

  /**
   * Gets the value of the 'entityId' field.
   */
  public java.lang.CharSequence getEntityId() {
    return entityId;
  }

  /**
   * Sets the value of the 'entityId' field.
   * @param value the value to set.
   */
  public void setEntityId(java.lang.CharSequence value) {
    this.entityId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.CharSequence getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.CharSequence value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'txnId' field.
   */
  public java.lang.CharSequence getTxnId() {
    return txnId;
  }

  /**
   * Sets the value of the 'txnId' field.
   * @param value the value to set.
   */
  public void setTxnId(java.lang.CharSequence value) {
    this.txnId = value;
  }

  /**
   * Gets the value of the 'operations' field.
   */
  public java.util.List<java.lang.Object> getOperations() {
    return operations;
  }

  /**
   * Sets the value of the 'operations' field.
   * @param value the value to set.
   */
  public void setOperations(java.util.List<java.lang.Object> value) {
    this.operations = value;
  }

  /** Creates a new Patch RecordBuilder */
  public static org.debezium.message.Patch.Builder newBuilder() {
    return new org.debezium.message.Patch.Builder();
  }
  
  /** Creates a new Patch RecordBuilder by copying an existing Builder */
  public static org.debezium.message.Patch.Builder newBuilder(org.debezium.message.Patch.Builder other) {
    return new org.debezium.message.Patch.Builder(other);
  }
  
  /** Creates a new Patch RecordBuilder by copying an existing Patch instance */
  public static org.debezium.message.Patch.Builder newBuilder(org.debezium.message.Patch other) {
    return new org.debezium.message.Patch.Builder(other);
  }
  
  /**
   * RecordBuilder for Patch instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Patch>
    implements org.apache.avro.data.RecordBuilder<Patch> {

    private java.lang.CharSequence dbId;
    private java.lang.CharSequence entityTypeName;
    private java.lang.CharSequence entityId;
    private java.lang.CharSequence userId;
    private java.lang.CharSequence txnId;
    private java.util.List<java.lang.Object> operations;

    /** Creates a new Builder */
    private Builder() {
      super(org.debezium.message.Patch.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.debezium.message.Patch.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dbId)) {
        this.dbId = data().deepCopy(fields()[0].schema(), other.dbId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityTypeName)) {
        this.entityTypeName = data().deepCopy(fields()[1].schema(), other.entityTypeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userId)) {
        this.userId = data().deepCopy(fields()[3].schema(), other.userId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.txnId)) {
        this.txnId = data().deepCopy(fields()[4].schema(), other.txnId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.operations)) {
        this.operations = data().deepCopy(fields()[5].schema(), other.operations);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Patch instance */
    private Builder(org.debezium.message.Patch other) {
            super(org.debezium.message.Patch.SCHEMA$);
      if (isValidValue(fields()[0], other.dbId)) {
        this.dbId = data().deepCopy(fields()[0].schema(), other.dbId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.entityTypeName)) {
        this.entityTypeName = data().deepCopy(fields()[1].schema(), other.entityTypeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityId)) {
        this.entityId = data().deepCopy(fields()[2].schema(), other.entityId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userId)) {
        this.userId = data().deepCopy(fields()[3].schema(), other.userId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.txnId)) {
        this.txnId = data().deepCopy(fields()[4].schema(), other.txnId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.operations)) {
        this.operations = data().deepCopy(fields()[5].schema(), other.operations);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'dbId' field */
    public java.lang.CharSequence getDbId() {
      return dbId;
    }
    
    /** Sets the value of the 'dbId' field */
    public org.debezium.message.Patch.Builder setDbId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.dbId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'dbId' field has been set */
    public boolean hasDbId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'dbId' field */
    public org.debezium.message.Patch.Builder clearDbId() {
      dbId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'entityTypeName' field */
    public java.lang.CharSequence getEntityTypeName() {
      return entityTypeName;
    }
    
    /** Sets the value of the 'entityTypeName' field */
    public org.debezium.message.Patch.Builder setEntityTypeName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.entityTypeName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'entityTypeName' field has been set */
    public boolean hasEntityTypeName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'entityTypeName' field */
    public org.debezium.message.Patch.Builder clearEntityTypeName() {
      entityTypeName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'entityId' field */
    public java.lang.CharSequence getEntityId() {
      return entityId;
    }
    
    /** Sets the value of the 'entityId' field */
    public org.debezium.message.Patch.Builder setEntityId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.entityId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'entityId' field has been set */
    public boolean hasEntityId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'entityId' field */
    public org.debezium.message.Patch.Builder clearEntityId() {
      entityId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'userId' field */
    public java.lang.CharSequence getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public org.debezium.message.Patch.Builder setUserId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.userId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'userId' field */
    public org.debezium.message.Patch.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'txnId' field */
    public java.lang.CharSequence getTxnId() {
      return txnId;
    }
    
    /** Sets the value of the 'txnId' field */
    public org.debezium.message.Patch.Builder setTxnId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.txnId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'txnId' field has been set */
    public boolean hasTxnId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'txnId' field */
    public org.debezium.message.Patch.Builder clearTxnId() {
      txnId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'operations' field */
    public java.util.List<java.lang.Object> getOperations() {
      return operations;
    }
    
    /** Sets the value of the 'operations' field */
    public org.debezium.message.Patch.Builder setOperations(java.util.List<java.lang.Object> value) {
      validate(fields()[5], value);
      this.operations = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'operations' field has been set */
    public boolean hasOperations() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'operations' field */
    public org.debezium.message.Patch.Builder clearOperations() {
      operations = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Patch build() {
      try {
        Patch record = new Patch();
        record.dbId = fieldSetFlags()[0] ? this.dbId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.entityTypeName = fieldSetFlags()[1] ? this.entityTypeName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.entityId = fieldSetFlags()[2] ? this.entityId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.userId = fieldSetFlags()[3] ? this.userId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.txnId = fieldSetFlags()[4] ? this.txnId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.operations = fieldSetFlags()[5] ? this.operations : (java.util.List<java.lang.Object>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
